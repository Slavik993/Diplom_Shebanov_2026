using System.Threading.Tasks;
using UnityEngine;

public class LLMQuestGenerator : MonoBehaviour
{
    // –ó–¥–µ—Å—å —Ç—ã –º–æ–∂–µ—à—å —Ö—Ä–∞–Ω–∏—Ç—å —Å—Å—ã–ª–∫—É –Ω–∞ —Å–≤–æ–π –∫–æ–Ω—Ç—Ä–æ–ª–ª–µ—Ä –∏–ª–∏ LLM API
    public LLMPrototypeController controller;

    // –ü—Ä–æ—Å—Ç–æ–π –ø—Ä–∏–º–µ—Ä –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ (–∑–∞–≥–ª—É—à–∫–∞)
    public async Task<string> GenerateQuest(string prompt)
    {
        Debug.Log($"‚öôÔ∏è –ì–µ–Ω–µ—Ä–∞—Ü–∏—è –∫–≤–µ—Å—Ç–∞ –∑–∞–ø—É—â–µ–Ω–∞ —Å –ø—Ä–æ–º–ø—Ç–æ–º: {prompt}");

        // –ò–º–∏—Ç–∞—Ü–∏—è –∑–∞–ø—Ä–æ—Å–∞ ‚Äî –º–æ–∂–Ω–æ –∑–∞–º–µ–Ω–∏—Ç—å –Ω–∞ —Ä–µ–∞–ª—å–Ω—ã–π –≤—ã–∑–æ–≤ OpenAI / LLM
        await Task.Delay(2000);

        string result = $"üßô‚Äç‚ôÇÔ∏è –°–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω–Ω—ã–π –∫–≤–µ—Å—Ç:\n{prompt}\n‚Äî –ó–∞–≤–µ—Ä—à–µ–Ω–æ —É—Å–ø–µ—à–Ω–æ!";
        Debug.Log("‚úÖ –ö–≤–µ—Å—Ç —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω!");
        return result;
    }
}
