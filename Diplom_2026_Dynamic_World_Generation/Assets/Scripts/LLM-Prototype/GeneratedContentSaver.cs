using UnityEngine;
using System;
using System.IO;
#if UNITY_EDITOR
using UnityEditor;
#endif

/// <summary>
/// –í—Å–ø–æ–º–æ–≥–∞—Ç–µ–ª—å–Ω—ã–π –∫–ª–∞—Å—Å –¥–ª—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω–Ω–æ–≥–æ –∫–æ–Ω—Ç–µ–Ω—Ç–∞:
/// –î–∏–∞–ª–æ–≥–∏ NPC, –ö–≤–µ—Å—Ç—ã (–∏—Å—Ç–æ—Ä–∏–∏), –í–∏–∑—É–∞–ª—ã (–∏–∫–æ–Ω–∫–∏)
/// </summary>
public static class GeneratedContentSaver
{
    private static string basePath = Path.Combine(Application.dataPath, "Exports");

    /// <summary>
    /// –û–±—â–∏–π –º–µ—Ç–æ–¥ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è —Ç–µ–∫—Å—Ç–æ–≤—ã—Ö –¥–∞–Ω–Ω—ã—Ö.
    /// </summary>
    private static void SaveText(string content, string category)
    {
        if (string.IsNullOrEmpty(content))
        {
            Debug.LogWarning($"‚ö†Ô∏è –ù–µ—Ç –¥–∞–Ω–Ω—ã—Ö –¥–ª—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è ({category})!");
            return;
        }

        string folder = Path.Combine(basePath, category);
        Directory.CreateDirectory(folder);

        string filename = Path.Combine(folder, $"{category}_{DateTime.Now:yyyyMMdd_HHmmss}.txt");
        File.WriteAllText(filename, content);

        Debug.Log($"üíæ [{category}] –°–æ—Ö—Ä–∞–Ω–µ–Ω–æ: {filename}");

#if UNITY_EDITOR
        // –û–±–Ω–æ–≤–ª—è–µ–º –æ–∫–Ω–æ –ø—Ä–æ–µ–∫—Ç–∞, —á—Ç–æ–±—ã —Ñ–∞–π–ª –ø–æ—è–≤–∏–ª—Å—è
        AssetDatabase.Refresh();
#endif
    }

    /// <summary>
    /// –°–æ—Ö—Ä–∞–Ω—è–µ—Ç –¥–≤–æ–∏—á–Ω—ã–π —Ñ–∞–π–ª (–Ω–∞–ø—Ä–∏–º–µ—Ä PNG).
    /// </summary>
    private static void SaveBytes(byte[] bytes, string category, string ext)
    {
        if (bytes == null || bytes.Length == 0)
        {
            Debug.LogWarning($"‚ö†Ô∏è –ù–µ—Ç –¥–∞–Ω–Ω—ã—Ö –¥–ª—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è ({category})!");
            return;
        }

        string folder = Path.Combine(basePath, category);
        Directory.CreateDirectory(folder);

        string filename = Path.Combine(folder, $"{category}_{DateTime.Now:yyyyMMdd_HHmmss}.{ext}");
        File.WriteAllBytes(filename, bytes);

        Debug.Log($"üíæ [{category}] –°–æ—Ö—Ä–∞–Ω–µ–Ω–æ: {filename}");

#if UNITY_EDITOR
        AssetDatabase.Refresh();
#endif
    }

    // === –û–±—ë—Ä—Ç–∫–∏ –¥–ª—è —Ä–∞–∑–Ω—ã—Ö –º–æ–¥—É–ª–µ–π ===

    /// <summary>–°–æ—Ö—Ä–∞–Ω—è–µ—Ç –¥–∏–∞–ª–æ–≥ NPC (—Ç–µ–∫—Å—Ç)</summary>
    public static void SaveDialogue(string dialogueText)
    {
        SaveText(dialogueText, "NPC_Dialogues");
    }

    /// <summary>–°–æ—Ö—Ä–∞–Ω—è–µ—Ç —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω–Ω—ã–π –∫–≤–µ—Å—Ç –∏–ª–∏ –∏—Å—Ç–æ—Ä–∏—é (—Ç–µ–∫—Å—Ç)</summary>
    public static void SaveQuest(string storyText)
    {
        SaveText(storyText, "Quests_Stories");
    }

    /// <summary>–°–æ—Ö—Ä–∞–Ω—è–µ—Ç –æ–ø–∏—Å–∞–Ω–∏–µ –≤–∏–∑—É–∞–ª–∞ (–∏–ª–∏ –ø—É—Ç—å –∫ –∏–∫–æ–Ω–∫–µ) ‚Äî –æ—Å—Ç–∞–≤–ª—è–µ–º –¥–ª—è –æ–±—Ä–∞—Ç–Ω–æ–π —Å–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç–∏</summary>
    public static void SaveVisual(string visualText)
    {
        SaveText(visualText, "Generated_Visuals");
    }

    /// <summary>–°–æ—Ö—Ä–∞–Ω—è–µ—Ç Texture2D –∫–∞–∫ PNG –≤ –ø–∞–ø–∫—É Generated_Visuals</summary>
    public static void SaveVisual(Texture2D texture)
    {
        if (texture == null)
        {
            Debug.LogWarning("‚ö†Ô∏è SaveVisual(Texture2D): texture == null");
            return;
        }

        try
        {
            byte[] png = texture.EncodeToPNG();
            SaveBytes(png, "Generated_Visuals", "png");
        }
        catch (Exception ex)
        {
            Debug.LogError($"üí• SaveVisual(Texture2D) error: {ex.Message}");
        }
    }

    /// <summary>–ï—Å–ª–∏ –Ω–∞–¥–æ, –º–æ–∂–Ω–æ –µ—â—ë –¥–æ–±–∞–≤–∏—Ç—å SaveVisual(byte[] pngBytes) ‚Äî –ø–æ –∂–µ–ª–∞–Ω–∏—é.</summary>
    public static void SaveVisual(byte[] pngBytes)
    {
        SaveBytes(pngBytes, "Generated_Visuals", "png");
    }
}
